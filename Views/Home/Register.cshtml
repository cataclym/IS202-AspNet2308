@model MapReportsModel

@{
    ViewData["Title"] = "Registrert rapport";
}

<!DOCTYPE html>

<html>
<head>
</head>
<body>
<div>
    @if (Model.Melding.Length >= 1 || Model.StringKoordinaterLag.Length >= 1)
    {
        <h1>Rapport registrert</h1>
        <form asp-action="Register" asp-controller="Home" method="post" id="mapForm"> </form>
        <div>
            <h3>Melding</h3>
            <p>@Model.Melding</p>
        </div>
        <div id="map" style="height: 400px;"></div>
        <!-- Sørg for å ha høyde på kartet -->
        <div>
            <h3>Koordinater</h3>
            <p>GeoJSON Data: @Html.Raw(Model.StringKoordinaterLag)</p>
        </div>
    }
    else
    {
        <p>Model er null, kunne ikke vise data.</p>

    }
</div>

@section Scripts {
    <script>
    const map = lagKart({ zoomControl: true });
    
    // Skru av alt som flytter på kartet 
    map.dragging.disable();
    map.touchZoom.disable();
    map.doubleClickZoom.disable();
    map.scrollWheelZoom.disable();
    map.boxZoom.disable();
    map.keyboard.disable();
    if (map.tap) map.tap.disable();

    // Hent kartlag fra layout, legg til i kart
    kartLag.Land.addTo(map); 

    // Hent GeoJSON Object fra modellen
    const geoJSONObject = @Html.Raw(Model.StringKoordinaterLag);

    // For feilsøking, logg geoJSONObject
    console.log("GeoJSON: ", geoJSONObject);
    
    // Hvis GeoJSON-data eksisterer, legg til på kartet
    if (geoJSONObject !== null) {
        try {
            // Legg til GeoJSON-laget på kartet
            const geoLayer = L.geoJSON(geoJSONObject).addTo(map);

            // Juster kartets visning til å passe GeoJSON-dataene
            const bounds = geoLayer.getBounds();
            map.fitBounds(bounds);
        } catch (error) {
            console.error("Feil ved parsing av GeoJSON-data:", error);
        }
    } else {
        console.error("Ingen GeoJSON-data funnet");
    }
    </script>
}
</body>
</html>
