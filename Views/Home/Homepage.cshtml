@model Kartverket.Models.HomePageModel

<!DOCTYPE html>
<html>

<head>
    <!-- Include any other necessary scripts or styles -->
    <!-- Include Bootstrap CSS and JS for Toasts -->

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
</head>
<body class="home-page">

@if (Model.User.IsAdmin)
{
    <h1 class="header1 display-4">Administrer <span class="highlight">Rapporter</span></h1>
}
else
{
    <h1 class="header1 display-4">Min <span class="highlight">Side</span></h1>
}

<div class="buttons-wrapper">
    <div class="button-group">
        <!-- Your buttons -->
        <p>Feil i kartet? Trykk her:</p>
        <div class="center-horizontal" style="text-decoration: none">
            <form asp-action="MapReport" method="post">
                <button type="submit" class="btn-general btn-primary">Meld feil</button>
            </form>
        </div>
        <div class="password-change">
            <form asp-controller="Account" asp-action="PasswordView" method="post">
                <button id="showPasswordFormBtn" class="btn-general btn-primary">Endre passord</button>
            </form>
        </div>
        <div>
            <form asp-controller="Account" asp-action="Logout" method="post">
                <button type="submit" class="btn-general btn-logout">Logg ut</button>
            </form>
        </div>
    </div>
</div>

<!-- Dropdown and Date Filter -->
<div class="table-container">
    <div class="dropdown">
        <button onclick="myFunction()" class="dropbtn">Dropdown</button>
        <div id="myDropdown" class="dropdown-content">
            <!-- View all reports -->
            <a href="#" onclick="showAllReports()">Alle rapporter</a>
            <!-- Filter options by status -->
            <a href="#" onclick="filterByStatus('ubehandlet')">Ubehandlet</a>
            <a href="#" onclick="filterByStatus('behandlet')">Behandlet</a>
            <a href="#" onclick="filterByStatus('under_behandling')">Under behandling</a>
            @if (Model.User.IsAdmin)
            {
                <!-- Sorting options for admin -->
                <a href="#" onclick="sortTable(4)">Nyeste</a>
                <a href="#" onclick="sortTable(4)">Eldste</a>
                <a href="#" onclick="sortTable(2)">Brukernavn</a>
            }
            else
            {
                <!-- Sorting options for user -->
                <a href="#" onclick="sortTable(3)">Nyeste</a>
                <a href="#" onclick="sortTable(3)">Eldste</a>
            }
        </div>
    </div>
    <!-- Date filtering -->
    <label for="dateFilter">Filter etter dato:</label>
    <input type="date" id="dateFilter" onchange="filterByDate(this.value)" />
</div>

<!-- User Information -->
<div class="user-information">
    @if (Model != null)
    {
        <table class="user-info-table">
            <tr class="user-table-header">
                <th colspan="2" style="text-align: left;" class="user-table-header">Min informasjon:</th>
            </tr>
            <tr>
                <td><strong>Brukernavn:</strong></td>
                <td>@Model.User.Username</td>
            </tr>
            <tr>
                <td><strong>E-post:</strong></td>
                <td>@Model.User.Email</td>
            </tr>
            <tr>
                <td><strong>Telefonnummer:</strong></td>
                <td>@Model.User.Phone</td>
            </tr>
        </table>
    }
</div>

<!-- Reports Table -->
<div>
    <table id="@(Model.User.IsAdmin ? "admin-table" : "user-table")" class="user-info-table">
        <!-- Table header row for column names -->
        <thead>
            <tr>
                <th>Rapport ID</th>
                <th>Melding</th>
                @if (Model.User.IsAdmin)
                {
                    <th>Brukernavn</th>
                }
                <th>Status</th>
                <th>Opprettet</th>
                <th>Pin</th>
            </tr>
        </thead>
        <!-- Table body for reports data -->
        <tbody>
            @if (Model.Reports != null && Model.Reports.Any())
            {
                @foreach (var report in Model.Reports)
                {
                    <tr data-report-id="@report.ReportId"
                        data-is-pinned="@report.IsPinned.ToString().ToLower()"
                        data-status="@report.Status.ToString().ToLower()"
                        data-date="@report.CreatedAt.ToString("yyyy-MM-dd")">
                        <td>
                            <a asp-action="ReportView"
                               asp-controller="Reports"
                               asp-route-id="@report.ReportId">
                                @report.ReportId
                            </a>
                        </td>
                        <td class="truncate-text" title="@report.FirstMessage">
                            @report.FirstMessage
                        </td>
                        @if (Model.User.IsAdmin)
                        {
                            <td>@report.Username</td>
                        }
                        <td>@report.Status.ToString()</td>
                        <td data-created-at="@report.CreatedAt.ToString("o")">
                            @report.CreatedAt.ToString("yyyy-MM-dd")
                        </td>
                        <td>
                            <button
                                class="btn @(report.IsPinned ? "btn-success" : "btn-primary") pin-button"
                                data-report-id="@report.ReportId"
                                data-is-pinned="@report.IsPinned.ToString().ToLower()">
                                @(report.IsPinned ? "Unpin" : "Pin")
                            </button>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="@(Model.User.IsAdmin ? "6" : "5")">Ingen rapporter tilgjengelig.</td>
                </tr>
            }
        </tbody>
    </table>
</div>

<!-- JavaScript Functions -->
<script>
    // Function to show/hide dropdown
    function myFunction() {
        document.getElementById("myDropdown").classList.toggle("show");
    }

    // Close dropdown if user clicks outside of it
    window.onclick = function(event) {
        if (!event.target.matches('.dropbtn') && !event.target.closest('.dropdown-content')) {
            const dropdowns = document.getElementsByClassName("dropdown-content");
            for (let i = 0; i < dropdowns.length; i++) {
                const openDropdown = dropdowns[i];
                if (openDropdown.classList.contains('show')) {
                    openDropdown.classList.remove('show');
                }
            }
        }
    };

    // Show all reports
    function showAllReports() {
        const table = document.querySelector('#admin-table tbody') || document.querySelector('#user-table tbody');
        if (!table) return;

        const rows = table.querySelectorAll('tr');
        rows.forEach(row => {
            row.style.display = '';
        });
        document.getElementById('dateFilter').value = '';
    }

    // Sort table by a specific column
    let currentSortOrder = {
        column: -1,
        order: 'asc'
    };

    function sortTable(columnIndex) {
        const isAdmin = @Model.User.IsAdmin.ToString().ToLower(); // Check if user is admin
        const table = isAdmin ? document.querySelector('#admin-table tbody') : document.querySelector('#user-table tbody');
        if (!table) return;

        // Toggle sort order if same column is clicked
        if (currentSortOrder.column === columnIndex) {
            currentSortOrder.order = currentSortOrder.order === 'asc' ? 'desc' : 'asc';
        } else {
            currentSortOrder.column = columnIndex;
            currentSortOrder.order = 'asc';
        }

        const rows = Array.from(table.rows);

        rows.sort((rowA, rowB) => {
            let comparison = 0;

            // Handling for date
            const dateColumnIndex = isAdmin ? 4 : 3; // Use column 4 for admin, 3 for user
            if (columnIndex === dateColumnIndex) {
                const dateA = new Date(rowA.getAttribute('data-date'));
                const dateB = new Date(rowB.getAttribute('data-date'));
                comparison = dateA - dateB;
            } else if (columnIndex === 2 && isAdmin === 'true') { // If sorting by "Brukernavn" column
                const cellA = rowA.cells[columnIndex].innerText.trim().toLowerCase();
                const cellB = rowB.cells[columnIndex].innerText.trim().toLowerCase();
                comparison = cellA.localeCompare(cellB);
            }

            // Adjust comparison based on sort order
            return currentSortOrder.order === 'asc' ? comparison : -comparison;
        });

        // Clear the table before adding sorted rows
        table.innerHTML = '';

        // Append sorted rows to the table
        rows.forEach(row => table.appendChild(row));
    }

    // Filter by status
    function filterByStatus(status) {
        const table = document.querySelector('#admin-table tbody') || document.querySelector('#user-table tbody');
        if (!table) return;

        const rows = table.querySelectorAll('tr');
        rows.forEach(row => {
            row.style.display = row.dataset.status === status ? '' : 'none';
        });

        // Keep dropdown open after selection
        const dropdown = document.getElementById("myDropdown");
        dropdown.classList.add("show");
    }

    // Filter by selected date
    function filterByDate(selectedDate) {
        const table = document.querySelector('#admin-table tbody') || document.querySelector('#user-table tbody');
        if (!table) return;

        const rows = table.querySelectorAll('tr');
        rows.forEach(row => {
            const rowDate = row.getAttribute('data-date');
            row.style.display = rowDate === selectedDate ? '' : 'none';
        });

        // Keep dropdown open after selection
        const dropdown = document.getElementById("myDropdown");
        dropdown.classList.add("show");
    }

    // Pin/Unpin functionality using AJAX
    document.addEventListener('DOMContentLoaded', function() {
        const pinButtons = document.querySelectorAll('.pin-button');

        pinButtons.forEach(button => {
            button.addEventListener('click', function(event) {
                event.preventDefault();

                const reportId = this.getAttribute('data-report-id');
                const isPinned = this.getAttribute('data-is-pinned') === 'true';

                // Determine the action URL
                const actionUrl = isPinned ? '/Home/UnpinReport' : '/Home/PinReport';

                // Make AJAX request
                fetch(actionUrl, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': '@Antiforgery.GetAndStoreTokens(HttpContext).RequestToken'
                    },
                    body: JSON.stringify({ reportId: reportId })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        // Toggle the button state
                        this.classList.toggle('btn-success');
                        this.classList.toggle('btn-primary');
                        this.textContent = isPinned ? 'Pin' : 'Unpin';
                        this.setAttribute('data-is-pinned', (!isPinned).toString());

                        // Optionally update the row's data attribute
                        this.closest('tr').setAttribute('data-is-pinned', (!isPinned).toString());
                    } else {
                        // Handle error
                        alert('En feil oppstod under oppdatering av pin-status.');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                });
            });
        });
    });
</script>

</body>
</html>
