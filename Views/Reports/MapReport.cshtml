@model ReportViewModel

@{
    ViewData["Title"] = "Registrer ny rapport";
    ViewBag.UseFluidContainer = true; // If using conditional container
    // Or Layout = "~/Views/Shared/_FluidLayout.cshtml"; if using separate layout
}

<!DOCTYPE html>

<html>
<head>
    <style>
        body {
            overflow: hidden; /* Forhindrer scrolling på siden */
        }
    </style>
</head>
<body>

<div>
    <div class="map-container">
        <div id="map" class="styledMap"></div>
    </div>
    @if (ViewData["ErrorMessage"] != null)
    {
        <div class="alert-danger m-auto mt-1 mb-1 width-900 p-1 border-danger border-1 border-black border-radius-5">
            <p class="mb-0">@ViewData["ErrorMessage"]</p>
        </div>
    }

    <div id="descriptionForm">
        <button class="close-button" onclick="closeForm()">&times;</button>
        <form asp-controller="Reports" asp-action="RegisterMapReport" method="post" id="mapForm">
            <div>
                <textarea id="meldingsBoks" asp-for="FirstMessage" required minlength="5" style="width: 250px; height: 105px;" placeholder="Beskrivelse (minst 5 tegn)"></textarea>
            </div>
            <div>
                <input type="text" class="visually-hidden" id="Koordinater" asp-for="StringKoordinaterLag" required></input>
            </div>
            <div class="center-horizontal">
                <button class="btn-general btn-primary" onclick="submitForm()">Send inn</button>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function() {
            const overlay = document.getElementById('modal-overlay')
            const modal = document.getElementById('modal-content')
            
            if (overlay) overlay.style.display = 'none'
            if (modal) modal.style.display = 'none';            
        });
    
    const map = lagKart();
    // Skrur av forskjellige tegnekontroller
    map.pm.addControls({
        position: 'topleft',
        rotateMode: false,
        drawMarker: true,
        drawPolygon: true,
        drawCircleMarker: false,
        drawPolyline: false,
        drawCircle: false,
        drawText: false
    });
        
    // Leverer kartdata til home-kontrolleren
    function submitForm() {
            
        // Henter alle lag fra kartet
        const layers = L.PM.Utils.findLayers(map).filter(layer => layer._drawnByGeoman)
        
        // Oppretter et GeoJSON-objekt for kartdata
        const geojson = {
            type: "FeatureCollection",
            features: []
        };

        layers.forEach(layer => {
            // Konverterer hvert lag til GeoJSON-format og legger det til 'features'
            const geojsonFeature = layer.toGeoJSON();
            geojson.features.push(geojsonFeature);
        });

        // Finner input-feltet der GeoJSON skal lagres
        const koordinater = document.getElementById("Koordinater");

        // Lagrer GeoJSON-data som en streng i input-feltet
        koordinater.value = JSON.stringify(geojson);

        const meldingsBoks = document.getElementById("meldingsBoks")
    
        // Validering av melding i tekstboksen
        // Og om det er lagt til et kart-lag
        if (meldingsBoks.innerHTML.length < 5 || !geojson.features.length) return;
        
        // Sender skjemaet
        document.getElementById("mapForm").submit();
    }
    

    // Lytt til pm:create eventen for å vise tekstboksen og knappen
        map.on('pm:create', function(e) {
            document.getElementById('descriptionForm').style.display = 'block';
        });
        
    // funksjon for å krysse ut descriptionForm boks
        function closeForm() {
            document.getElementById("descriptionForm").style.display = "none"; // Skjuler boksen
        }
    </script>
}

</body>
</html>